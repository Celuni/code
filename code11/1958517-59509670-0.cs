    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using QuickType;
    //
    //    var welcome = Welcome.FromJson(jsonString);
    
    namespace QuickType
    {
        using System;
        using System.Collections.Generic;
    
        using System.Globalization;
        using Newtonsoft.Json;
        using Newtonsoft.Json.Converters;
    
        public partial class Welcome
        {
            [JsonProperty("place_id")]
            public long PlaceId { get; set; }
    
            [JsonProperty("licence")]
            public string Licence { get; set; }
    
            [JsonProperty("osm_type")]
            public string OsmType { get; set; }
    
            [JsonProperty("osm_id")]
            public long OsmId { get; set; }
    
            [JsonProperty("boundingbox")]
            public string[] Boundingbox { get; set; }
    
            [JsonProperty("lat")]
            public string Lat { get; set; }
    
            [JsonProperty("lon")]
            public string Lon { get; set; }
    
            [JsonProperty("display_name")]
            public string DisplayName { get; set; }
    
            [JsonProperty("class")]
            public string Class { get; set; }
    
            [JsonProperty("type")]
            public string Type { get; set; }
    
            [JsonProperty("importance")]
            public double Importance { get; set; }
    
            [JsonProperty("icon")]
            public Uri Icon { get; set; }
    
            [JsonProperty("geojson")]
            public Geojson Geojson { get; set; }
        }
    
        public partial class Geojson
        {
            [JsonProperty("type")]
            public string Type { get; set; }
    
            [JsonProperty("coordinates")]
            public double[][][] Coordinates { get; set; }
        }
    
        public partial class Welcome
        {
            public static Welcome[] FromJson(string json) => JsonConvert.DeserializeObject<Welcome[]>(json, QuickType.Converter.Settings);
        }
    
        public static class Serialize
        {
            public static string ToJson(this Welcome[] self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        }
    
        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
                {
                    new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
                },
            };
        }
    }
