c#
struct Beep
{
    public readonly int Frequency;
    public readonly int Duration;
    public Beep(int frequency, int duration)
    {
        Frequency = frequency;
        Duration = duration;
    }
}
class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine();
        Console.WriteLine("REVEILLE TOI !!!!!!!!!!!!");
        Console.WriteLine();
        Console.WriteLine("appuyez sur une touche pour arrter l'alarme, sinon elle sonera pour l'éternitée");
        foreach (Beep beep in _beeps)
        {
            if (Console.KeyAvailable) break;
            Console.Beep(beep.Frequency, beep.Duration);
        }
    }
    private static readonly Beep[] _beeps =
    {
            new Beep(659, 125),
            new Beep(659, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(523, 125),
            new Beep(659, 125),
            new Beep(32400, 125),
            new Beep(784, 125),
            new Beep(32400, 375),
            new Beep(392, 125),
            new Beep(32400, 375),
            new Beep(523, 125),
            new Beep(32400, 250),
            new Beep(392, 125),
            new Beep(32400, 250),
            new Beep(330, 125),
            new Beep(32400, 250),
            new Beep(440, 125),
            new Beep(32400, 125),
            new Beep(494, 125),
            new Beep(32400, 125),
            new Beep(466, 125),
            new Beep(32400, 42),
            new Beep(440, 125),
            new Beep(32400, 125),
            new Beep(392, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 125),
            new Beep(784, 125),
            new Beep(32400, 125),
            new Beep(880, 125),
            new Beep(32400, 125),
            new Beep(698, 125),
            new Beep(784, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 125),
            new Beep(523, 125),
            new Beep(32400, 125),
            new Beep(587, 125),
            new Beep(494, 125),
            new Beep(32400, 125),
            new Beep(523, 125),
            new Beep(32400, 250),
            new Beep(392, 125),
            new Beep(32400, 250),
            new Beep(330, 125),
            new Beep(32400, 250),
            new Beep(440, 125),
            new Beep(32400, 125),
            new Beep(494, 125),
            new Beep(32400, 125),
            new Beep(466, 125),
            new Beep(32400, 42),
            new Beep(440, 125),
            new Beep(32400, 125),
            new Beep(392, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 125),
            new Beep(784, 125),
            new Beep(32400, 125),
            new Beep(880, 125),
            new Beep(32400, 125),
            new Beep(698, 125),
            new Beep(784, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 125),
            new Beep(523, 125),
            new Beep(32400, 125),
            new Beep(587, 125),
            new Beep(494, 125),
            new Beep(32400, 375),
            new Beep(784, 125),
            new Beep(740, 125),
            new Beep(698, 125),
            new Beep(32400, 42),
            new Beep(622, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(415, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(32400, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(587, 125),
            new Beep(32400, 250),
            new Beep(784, 125),
            new Beep(740, 125),
            new Beep(698, 125),
            new Beep(32400, 42),
            new Beep(622, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(698, 125),
            new Beep(32400, 125),
            new Beep(698, 125),
            new Beep(698, 125),
            new Beep(32400, 625),
            new Beep(784, 125),
            new Beep(740, 125),
            new Beep(698, 125),
            new Beep(32400, 42),
            new Beep(622, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(415, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(32400, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(587, 125),
            new Beep(32400, 250),
            new Beep(622, 125),
            new Beep(32400, 250),
            new Beep(587, 125),
            new Beep(32400, 250),
            new Beep(523, 125),
            new Beep(32400, 1125),
            new Beep(784, 125),
            new Beep(740, 125),
            new Beep(698, 125),
            new Beep(32400, 42),
            new Beep(622, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(415, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(32400, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(587, 125),
            new Beep(32400, 250),
            new Beep(784, 125),
            new Beep(740, 125),
            new Beep(698, 125),
            new Beep(32400, 42),
            new Beep(622, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(698, 125),
            new Beep(32400, 125),
            new Beep(698, 125),
            new Beep(698, 125),
            new Beep(32400, 625),
            new Beep(784, 125),
            new Beep(740, 125),
            new Beep(698, 125),
            new Beep(32400, 42),
            new Beep(622, 125),
            new Beep(32400, 125),
            new Beep(659, 125),
            new Beep(32400, 167),
            new Beep(415, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(32400, 125),
            new Beep(440, 125),
            new Beep(523, 125),
            new Beep(587, 125),
            new Beep(32400, 250),
            new Beep(622, 125),
            new Beep(32400, 250),
            new Beep(587, 125),
            new Beep(32400, 250),
            new Beep(523, 125),
    };
}
For clarity in the code above, I took out the "alarm clock" aspect of your example, where you prompt for the day, hour, and minutes and then sleep for the specified duration, because that part has nothing to do with the question you actually asked.
Note that I also moved your note data into a dedicated user-defined type, and stored the values in an array. This gives you more flexibility regarding how you can implement the logic, including provides an easy way to loop and check for key input at the same time, without having to hard-code a bunch of calls to `Console.Beep()` and `Console.KeyAvailable`.
This implementation will allow the user to stop the playing of the notes almost as soon as they press a key. There is still a little bit of latency, because the key can be checked only after each note is done playing, as well as the fact that Windows itself will still let a note in progress finish playing even after the process has exited. But it's as close as you're going to get in a console program that uses `Console.Beep()`. :)
