    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using QuickType;
    //
    //    var myJson = MyJson.FromJson(jsonString);
    
    namespace QuickType
    {
        using System;
        using System.Collections.Generic;
    
        using System.Globalization;
        using Newtonsoft.Json;
        using Newtonsoft.Json.Converters;
    
        public partial class MyJson
        {
            [JsonProperty("URL")]
            public string Url { get; set; }
    
            [JsonProperty("Method")]
            public string Method { get; set; }
    
            [JsonProperty("Parameters")]
            public Dictionary<string, Parameter> Parameters { get; set; }
        }
    
        public partial class Parameter
        {
            [JsonProperty("VersionName")]
            public string VersionName { get; set; }
    
            [JsonProperty("TestCycleName")]
            public string TestCycleName { get; set; }
    
            [JsonProperty("ClientID")]
            public string ClientId { get; set; }
    
            [JsonProperty("ClientName")]
            public string ClientName { get; set; }
        }
    
        public partial class MyJson
        {
            public static MyJson FromJson(string json) => JsonConvert.DeserializeObject<MyJson>(json, QuickType.Converter.Settings);
        }
    
        public static class Serialize
        {
            public static string ToJson(this MyJson self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        }
    
        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
                {
                    new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
                },
            };
        }
    }
