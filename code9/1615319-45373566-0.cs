     SqlConnection sqlconn = new SqlConnection("xxxxxxxxx");
            sqlconn.Open();
            SqlCommand sqlcomm = new SqlCommand("GetOneWeekRosters", sqlconn);
            SqlParameter a = new SqlParameter("@Date", mysearch.DateSelected);
            SqlParameter b = new SqlParameter("@DepartmentID", mysearch.DepartmentID);
            SqlParameter c = new SqlParameter("@RosterID", mysearch.RosterID);
            SqlParameter d = new SqlParameter("@RosterWeekID", mysearch.RosterWeekID);
            SqlParameter e = new SqlParameter("@Active", true);
            sqlcomm.Parameters.Add(a);
            sqlcomm.Parameters.Add(b);
            sqlcomm.Parameters.Add(c);
            sqlcomm.Parameters.Add(d);
            sqlcomm.Parameters.Add(e);
            sqlcomm.CommandType = CommandType.StoredProcedure;
            var rdr = await sqlcomm.ExecuteReaderAsync();
            var mylist = new List<RosterLineView>();
            while (rdr.Read()) {
                int rosterid = int.Parse(rdr["RosterID"].ToString());
                int rosterweekid = int.Parse(rdr["RosterWeekID"].ToString());
                string firstname = rdr["FirstName"].ToString();
                string surname = rdr["Surname"].ToString();
                int employeeid = int.Parse(rdr["EmployeeID"].ToString());
                int departmentid = int.Parse(rdr["DepartmentID"].ToString());
                int institutionid = int.Parse(rdr["InstitutionID"].ToString());
                decimal contractedhours = decimal.Parse(rdr["ContractedHours"].ToString());
                int reportingorder = int.Parse(rdr["ReportingOrder"].ToString());
                string notes = rdr["Notes"].ToString();
                int activitytypeid = int.Parse(rdr["ActivityTypeID"].ToString());
                string activitytypeshort = rdr["ActivityTypeShort"].ToString();
                decimal rosterhourvalue = decimal.Parse(rdr["RosterHourValue"].ToString());
                int rosterlineid = int.Parse(rdr["RosterLineID"].ToString());
                int positionid = int.Parse(rdr["PositionID"].ToString());
                DateTimeOffset shiftstart = DateTimeOffset.Parse(rdr["ShiftStart"].ToString());
                string rosterareaname = rdr["RosterAreaName"].ToString();
                string rostershiftname = rdr["RosterShiftName"].ToString();
                DateTimeOffset shiftfinish = DateTimeOffset.Parse(rdr["ShiftFinish"].ToString());
                int rostershiftid = int.Parse(rdr["RosterShiftID"].ToString());
                int rosterareaid = int.Parse(rdr["RosterAreaID"].ToString());
                DateTime datedim = DateTime.Parse(rdr["DateDim"].ToString());
                var myitem = new RosterLineView();
                myitem.RosterID = rosterid;
                myitem.RosterLineID = rosterlineid;
                myitem.RosterShiftFinish = shiftfinish;
                myitem.RosterShiftStart = shiftstart;
                myitem.ActivityTypeID = activitytypeid;
                myitem.ActivityTypeShort = activitytypeshort;
                myitem.ContractedHours = contractedhours;
                myitem.DateDim = datedim;
                myitem.DepartmentID = departmentid;
                myitem.InstitutionID = institutionid;
                myitem.Notes = notes;
                myitem.PositionID = positionid;
                myitem.RosterAreaID = rosterareaid;
                myitem.RosterAreaName = rosterareaname;
                myitem.RosterShiftID = rostershiftid;
                myitem.RosterShiftName = rostershiftname;
                myitem.Surname = surname;
                myitem.FirstName = firstname;
                myitem.RosterHourValue = rosterhourvalue;
                myitem.RosterWeekID = rosterweekid;
                mylist.Add(myitem);
            }
            sqlconn.Close();
            rdr.Dispose();
            return mylist;
        }
