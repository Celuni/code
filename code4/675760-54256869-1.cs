    private class GroupKey
        {
            public List<string> Columns { get; } = new List<string>();
            public GroupKey(params string[] columns)
            {
                foreach (var column in columns)
                {
                    // Using 'ToUpperInvariant()' if user calls Distinct() after 
                    // the grouping, matching strings with a different case will 
                    // be dropped and not duplicated
                    Columns.Add(column.ToUpperInvariant());
                }
            }
        }
        private class KeyComparer : IEqualityComparer<GroupKey>
        {
            bool IEqualityComparer<GroupKey>.Equals(GroupKey x, GroupKey y)
            {
                for (var i = 0; i < x.Columns.Count; i++)
                {
                    if (!x.Columns[i].Equals(y.Columns[i], StringComparison.OrdinalIgnoreCase)) return false;
                }
                return true;
            }
            int IEqualityComparer<GroupKey>.GetHashCode(GroupKey obj)
            {
                var hashcode = obj.Columns[0].GetHashCode();
                for (var i = 1; i < obj.Columns.Count; i++)
                {
                    var column = obj.Columns[i];
                    // *397 is normally generated by ReSharper to create more unique values
                    // So I added it here, it's technically not required
                    hashcode = (hashcode * 397) ^ (column != null ? column.GetHashCode() : 0);
                }
                return hashcode;
            }
        }
    
