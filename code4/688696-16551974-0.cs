    public class ExampleContext : DbContext
    {
        public ExampleContext()
			: base("Name=ExampleContext") {
            Configuration.LazyLoadingEnabled = true;
            Configuration.ProxyCreationEnabled = true;
        }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Location> Locations { get; set; }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Employee>()
                    .HasOptional(m => m.Location)
                    .WithRequired();
        }
    }
    public class Employee
    {
        [Key]
        [Column("employee_id")]
        public int EmployeeId { get; set; }
        
        public virtual Location Location { get; set; }
    }
    
    public class Location
    {
        [Key]
        [Column("employee_id")]
        public int EmployeeId { get; set; }
    }
    
    //  Migration class as follows was generated by code-first migrations (add-migration OneToOne) and then updated the database by update-database
    public partial class OneToOne : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.Employees",
                c => new
                    {
                        employee_id = c.Int(nullable: false, identity: true),
                    })
                .PrimaryKey(t => t.employee_id);
            
            CreateTable(
                "dbo.Locations",
                c => new
                    {
                        employee_id = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.employee_id)
                .ForeignKey("dbo.Employees", t => t.employee_id)
                .Index(t => t.employee_id);
            
        }
        
        public override void Down()
        {
            DropIndex("dbo.Locations", new[] { "employee_id" });
            DropForeignKey("dbo.Locations", "employee_id", "dbo.Employees");
            DropTable("dbo.Locations");
            DropTable("dbo.Employees");
        }
    }
