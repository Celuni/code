    // Generated by https://quicktype.io
    
    namespace QuickType
    {
        using System;
        using System.Collections.Generic;
    
        using System.Globalization;
        using Newtonsoft.Json;
        using Newtonsoft.Json.Converters;
    
        public partial class TopLevel
        {
            [JsonProperty("events")]
            public Event[] Events { get; set; }
        }
    
        public partial class Event
        {
            [JsonProperty("id")]
            public string Id { get; set; }
    
            [JsonProperty("timestamp")]
            public DateTimeOffset Timestamp { get; set; }
    
            [JsonProperty("action")]
            public string Action { get; set; }
    
            [JsonProperty("target")]
            public Target Target { get; set; }
    
            [JsonProperty("request")]
            public Request Request { get; set; }
    
            [JsonProperty("actor")]
            public Actor Actor { get; set; }
    
            [JsonProperty("source")]
            public Source Source { get; set; }
        }
    
        public partial class Actor
        {
        }
    
        public partial class Request
        {
            [JsonProperty("id")]
            public string Id { get; set; }
    
            [JsonProperty("addr")]
            public string Addr { get; set; }
    
            [JsonProperty("host")]
            public string Host { get; set; }
    
            [JsonProperty("method")]
            public string Method { get; set; }
    
            [JsonProperty("useragent")]
            public string Useragent { get; set; }
        }
    
        public partial class Source
        {
            [JsonProperty("addr")]
            public string Addr { get; set; }
    
            [JsonProperty("instanceID")]
            public string InstanceId { get; set; }
        }
    
        public partial class Target
        {
            [JsonProperty("mediaType")]
            public string MediaType { get; set; }
    
            [JsonProperty("size")]
            public long Size { get; set; }
    
            [JsonProperty("digest")]
            public string Digest { get; set; }
    
            [JsonProperty("length")]
            public long Length { get; set; }
    
            [JsonProperty("repository")]
            public string Repository { get; set; }
    
            [JsonProperty("url")]
            public string Url { get; set; }
    
            [JsonProperty("tag")]
            public string Tag { get; set; }
        }
    
        public partial class TopLevel
        {
            public static TopLevel FromJson(string json) => JsonConvert.DeserializeObject<TopLevel>(json, QuickType.Converter.Settings);
        }
    
        public static class Serialize
        {
            public static string ToJson(this TopLevel self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        }
    
        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters = {
                    new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
                },
            };
        }
    }
