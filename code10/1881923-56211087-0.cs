public void A(Func<string> x)
{
    for (int i = 0; i < 10; i++)
    {
        var data = x.Invoke();
        Console.WriteLine($"{data} --- {i}");
    }
}
public string B(string fileName)
{
     // process fileName
     string data = C(fileName);
     return data;
}
public void Main()
{
    A(B("home/user1"));
}
I couldn't have just passed a `string` to `A`, generated by `B` like:
public void A(string data)
Because this doesn't allow for a change in data source in `B` (`B` could change the source based on another parameters - for example if `B` chose a random file with prefix `fileName`)  
Am I too clever to see the easier solution, or did you reading this also stumble upon a similar issue?
