        public static void RegenerateColumns<TItem, TPropertyCollectionItem>(
           this DataGrid dataGrid,
           String propertyName,
           Int32 columnsRequired)
        {
            dataGrid.RegenerateColumns<TItem, TPropertyCollectionItem>(propertyName,
                columnsRequired,
                index => String.Format("Column - {0}",
                    index));
        }
        public static void RegenerateColumns<TItem, TPropertyCollectionItem>(
            this DataGrid dataGrid,
            String propertyName,
            Int32 columnsRequired,
            Func<Int32, String> formatHeader)
        {
            if (dataGrid == null)
                throw new ArgumentNullException("dataGrid");
            if (propertyName == null)
                throw new ArgumentNullException("propertyName");
            if (columnsRequired < 0)
                throw new ArgumentOutOfRangeException("columnsRequired");
            if (formatHeader == null)
                throw new ArgumentNullException("formatHeader");
            // Remove old autocolumns
            dataGrid.RemoveAutoGeneratedColumns(propertyName);
            
            GenerateColumns(dataGrid,
                formatHeader,
                propertyName,
                columnsRequired);
        }
        private static void GenerateColumns(DataGrid dataGrid,
            Func<Int32, String> formatHeader,
            String propertyName,
            Int32 columnsRequired)
        {
            for (int columnNumber = 0; columnNumber < columnsRequired; columnNumber++)
            {
                DataGridTextColumn column = new DataGridTextColumn()
                {
                    Header = formatHeader(columnNumber),
                    Binding = new Binding(String.Format("{0}[{1}]",
                        propertyName,
                        columnNumber))
                };
                dataGrid.Columns.Add(column);
            }
        }
