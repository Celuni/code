    // Generated by EF
    public partial class MyClass
    {
        public int ID { get; set; }
        public string Name { get; set; }
        public string Surname { get; set; }
        public ICollection<MyInnerClass> MyInnerClass;
    }
    // Written by you (remember the partial!)
    public partial class MyClass
    {
        [Expandable]
        public int CountMyInnerClass()
        {
            // Not necessary to implement, unless you want to use it C#-side
            throw new NotImplementedException();
        }
        [Expandable]
        public int CountMyInnerClassPlus(int num)
        {
            // Not necessary to implement, unless you want to use it C#-side
            throw new NotImplementedException();
        }
        [Expandable]
        public int CountMyInnerClassProperty
        {
            get
            {
                // Not necessary to implement, unless you want to use it C#-side
                throw new NotImplementedException();
            }
        }
        [Expandable]
        public string FullName
        {
            get
            {
                // Not necessary to implement, unless you want to use it C#-side
                return Name + " " + Surname;
            }
        }
        protected static Expression<Func<MyClass, int>> CountMyInnerClassExpression()
        {
            return x => x.MyInnerClass.Count();
        }
        protected static Expression<Func<MyClass, int, int>> CountMyInnerClassPlusExpression()
        {
            return (x, num) => x.MyInnerClass.Count() + num;
        }
        protected static Expression<Func<MyClass, int>> CountMyInnerClassPropertyExpression
        {
            get
            {
                return x => x.MyInnerClass.Count();
            }
        }
        protected static Expression<Func<MyClass, string>> FullNameExpression
        {
            get
            {
                return x => x.Name + " " + x.Surname;
            }
        }
    }
