    public class Language : IEquatable<Language>
    {
        [JsonProperty("iso_639_1")]
        public string Iso { get; set; }
    
        [JsonProperty("name")]
        public string Name { get; set; }
    
        public override bool Equals(object obj)
        {
            return Equals(other as Language);
        }
        public bool Equals(Langauge other)
        {
            // instance is never equal to null
            if (other == null) return false;
            // when references are equal, they are the same object
            if (ReferenceEquals(this, other)) return true;
            // when either object is transient or the id's are not equal, return false
            if (IsTransient(this) || IsTransient(other) ||
                !Equals(Iso, other.Iso)) return false;
            // when the id's are equal and neither object is transient
            // return true when one can be cast to the other
            // because this entity could be generated by a proxy
            var otherType = other.GetUnproxiedType();
            var thisType = GetUnproxiedType();
            return thisType.IsAssignableFrom(otherType) ||
                otherType.IsAssignableFrom(thisType);
        }
    
        public override int GetHashCode()
        {
            return Iso.GetHashCode();
        }
        private static bool IsTransient(Language obj)
        {
            // an object is transient when its id is the default
            // (null for strings or 0 for numbers)
            return Equals(obj.Iso, default(string));
        }
        private Type GetUnproxiedType()
        {
            return GetType(); // return the unproxied type of the object
        }
    }
