    public static String ToStringReadable (HttpRequest request)
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendFormat("{0}[AcceptTypes] = {1}", Environment.NewLine, request.AcceptTypes);
            sb.AppendFormat("{0}[AnonymousID] = {1}", Environment.NewLine, request.AnonymousID);
            sb.AppendFormat("{0}[ApplicationPath] = {1}", Environment.NewLine, request.ApplicationPath);
            sb.AppendFormat("{0}[AppRelativeCurrentExecutionFilePath] = {1}", Environment.NewLine, request.AppRelativeCurrentExecutionFilePath);
            sb.AppendFormat("{0}[Browser] = {1}", Environment.NewLine, request.Browser);
            sb.AppendFormat("{0}[ClientCertificate] = {1}", Environment.NewLine, request.ClientCertificate);
            sb.AppendFormat("{0}[ContentEncoding] = {1}", Environment.NewLine, request.ContentEncoding);
            sb.AppendFormat("{0}[ContentLength] = {1}", Environment.NewLine, request.ContentLength);
            sb.AppendFormat("{0}[ContentType] = {1}", Environment.NewLine, request.ContentType);
            sb.AppendFormat("{0}[Cookies] = {1}", Environment.NewLine, request.Cookies);
            sb.AppendFormat("{0}[CurrentExecutionFilePath] = {1}", Environment.NewLine, request.CurrentExecutionFilePath);
            sb.AppendFormat("{0}[CurrentExecutionFilePathExtension] = {1}", Environment.NewLine, request.CurrentExecutionFilePathExtension);
            sb.AppendFormat("{0}[FilePath] = {1}", Environment.NewLine, request.FilePath);
            sb.AppendFormat("{0}[Files] = {1}", Environment.NewLine, request.Files);
            sb.AppendFormat("{0}[Filter] = {1}", Environment.NewLine, request.Filter);
            sb.AppendFormat("{0}[Form] = {1}", Environment.NewLine, request.Form);
            sb.AppendFormat("{0}[Headers] = {1}", Environment.NewLine, request.Headers);
            sb.AppendFormat("{0}[HttpChannelBinding] = {1}", Environment.NewLine, request.HttpChannelBinding);
            sb.AppendFormat("{0}[HttpMethod] = {1}", Environment.NewLine, request.HttpMethod);
            sb.AppendFormat("{0}[InputStream] = {1}", Environment.NewLine, request.InputStream);
            sb.AppendFormat("{0}[IsAuthenticated] = {1}", Environment.NewLine, request.IsAuthenticated);
            sb.AppendFormat("{0}[IsLocal] = {1}", Environment.NewLine, request.IsLocal);
            sb.AppendFormat("{0}[IsSecureConnection] = {1}", Environment.NewLine, request.IsSecureConnection);
            sb.AppendFormat("{0}[Params] = {1}", Environment.NewLine, request.Params);
            sb.AppendFormat("{0}[Path] = {1}", Environment.NewLine, request.Path);
            sb.AppendFormat("{0}[PathInfo] = {1}", Environment.NewLine, request.PathInfo);
            sb.AppendFormat("{0}[PhysicalApplicationPath] = {1}", Environment.NewLine, request.PhysicalApplicationPath);
            sb.AppendFormat("{0}[PhysicalPath] = {1}", Environment.NewLine, request.PhysicalPath);
            sb.AppendFormat("{0}[QueryString] = {1}", Environment.NewLine, request.QueryString);
            sb.AppendFormat("{0}[RawUrl] = {1}", Environment.NewLine, request.RawUrl);
            sb.AppendFormat("{0}[ReadEntityBodyMode] = {1}", Environment.NewLine, request.ReadEntityBodyMode);
            sb.AppendFormat("{0}[RequestContext] = {1}", Environment.NewLine, request.RequestContext);
            sb.AppendFormat("{0}[RequestType] = {1}", Environment.NewLine, request.RequestType);
            sb.AppendFormat("{0}[ServerVariables] = {1}", Environment.NewLine, request.ServerVariables);
            sb.AppendFormat("{0}[TimedOutToken] = {1}", Environment.NewLine, request.TimedOutToken);
            sb.AppendFormat("{0}[TlsTokenBindingInfo] = {1}", Environment.NewLine, request.TlsTokenBindingInfo);
            sb.AppendFormat("{0}[TotalBytes] = {1}", Environment.NewLine, request.TotalBytes);
            sb.AppendFormat("{0}[Unvalidated] = {1}", Environment.NewLine, request.Unvalidated);
            sb.AppendFormat("{0}[Url] = {1}", Environment.NewLine, request.Url);
            sb.AppendFormat("{0}[UrlReferrer] = {1}", Environment.NewLine, request.UrlReferrer);
            sb.AppendFormat("{0}[UserAgent] = {1}", Environment.NewLine, request.UserAgent);
            sb.AppendFormat("{0}[UserHostAddress] = {1}", Environment.NewLine, request.UserHostAddress);
            sb.AppendFormat("{0}[UserHostName] = {1}", Environment.NewLine, request.UserHostName);
            sb.AppendFormat("{0}[UserLanguages] = {1}", Environment.NewLine, request.UserLanguages);
            return sb.ToString();
        }
