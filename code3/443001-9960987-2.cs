        var context = new ManyMany();
        var physicsCourse = new Course() { CourseName = "Physics" };
        var mathCourse = new Course() { CourseName = "Math" };
        var studentJohn = new Student() { StudentName = "John Doe" };
        var studentJane = new Student() { StudentName = "Jane Doe" };
        var physicsCourseEnrollmentJohn = new Enrollment() { Student = studentJohn, Course = physicsCourse };
        var mathCourseEnrollmentJohn = new Enrollment() { Student = studentJohn, Course = mathCourse };
        var physicsCourseEnrollmentJane = new Enrollment() { Student = studentJane, Course = physicsCourse };
        context.Courses.Add(physicsCourse);
        context.Courses.Add(mathCourse);
        context.Students.Add(studentJohn);
        context.Students.Add(studentJane);
        studentJohn.Enrollments.Add(physicsCourseEnrollmentJohn);
        studentJohn.Enrollments.Add(mathCourseEnrollmentJohn);
        studentJane.Enrollments.Add(physicsCourseEnrollmentJane);
        physicsCourse.Enrollments.Add(physicsCourseEnrollmentJohn);
        mathCourse.Enrollments.Add(mathCourseEnrollmentJohn);
        physicsCourse.Enrollments.Add(physicsCourseEnrollmentJane);
        context.Enrollments.Add(physicsCourseEnrollmentJohn);
        context.Enrollments.Add(mathCourseEnrollmentJohn);
        context.Enrollments.Add(physicsCourseEnrollmentJane);
        context.SaveChanges();
        var johnsEnrollments = context.Students.Where(student => student.StudentId == studentJohn.StudentId).Single().Enrollments;
        MessageBox.Show(string.Format("Student John has enrolled in {0} courses.", johnsEnrollments.Count));
        var janesEnrollments = context.Students.Where(student => student.StudentId == studentJane.StudentId).Single().Enrollments;
        MessageBox.Show(string.Format("Student Jane has enrolled in {0} courses.", janesEnrollments.Count));
