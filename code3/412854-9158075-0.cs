    // Create MembershipUser...
    MembershipUser membershipUser = null;
    // Create a MembershipCreateStatus Status for Reporting...
    MembershipCreateStatus status = new MembershipCreateStatus();
    // Update the private connection string field in the base class. 
    string connectionString = "Data Source=SERVER;Initial Catalog='My Company Database';User ID=USERNAME;Password=PASSWORD";
    // Application Name...
    string applicationName = "My Company Database";
    // Username of the account to add...
    string username = "NewUser";
    // Generate a dynamic Password....
    string password = Membership.GeneratePassword(12, 3);
    // Email Address of the User...
    string email = "email@email.com";
    // The Password Question...
    string passwordQuestion = "What is my Password?";
    // The Password Answer...
    string passwordAnswer = "My Password is: .....";
    // Is Approved...
    bool isApproved = true;
    // Current Time Utc...
    DateTime dateTimeUtc = DateTime.UtcNow;
    // Create Date...
    DateTime createDateTime = DateTime.Now;
    // uniqueEmail = 
    int uniqueEmail = 1;
    // Password Format...
    int passwordFormat = 1;
    // Set the GUID...
    Guid guid= Guid.NewGuid();
    if (membershipUser == null)
    {
        SqlConnection sqlConnection = new SqlConnection(connectionString);
        SqlCommand sqlCommand = new SqlCommand("aspnet_Membership_CreateUser", sqlConnection);
        sqlCommand.CommandType = CommandType.StoredProcedure;
        sqlCommand.Parameters.Add("@ApplicationName", SqlDbType.NVarChar, 255).Value = applicationName;    // Input Parameter...
        sqlCommand.Parameters.Add("@UserName", SqlDbType.NVarChar, 255).Value = username;                  // Input Parameter...
        sqlCommand.Parameters.Add("@Password", SqlDbType.NVarChar, 127).Value = password;                  // Input Parameter...
        sqlCommand.Parameters.Add("@PasswordSalt", SqlDbType.NVarChar, 127).Value = password;              // Input Parameter...
        sqlCommand.Parameters.Add("@Email", SqlDbType.NVarChar, 255).Value = email;                        // Input Parameter...
        sqlCommand.Parameters.Add("@PasswordQuestion", SqlDbType.NVarChar, 255).Value = passwordQuestion;  // Input Parameter...
        sqlCommand.Parameters.Add("@PasswordAnswer", SqlDbType.NVarChar, 127).Value = passwordAnswer;      // Input Parameter...
        sqlCommand.Parameters.Add("@IsApproved", SqlDbType.Bit).Value = isApproved;                        // Input Parameter...
        sqlCommand.Parameters.Add("@CurrentTimeUtc", SqlDbType.DateTime, 7).Value = dateTimeUtc;           // Input Parameter...
        sqlCommand.Parameters.Add("@CreateDate", SqlDbType.DateTime, 7).Value = createDateTime;            // Input Parameter...
        sqlCommand.Parameters.Add("@UniqueEmail", SqlDbType.Int, 3).Value = uniqueEmail;                   // Input Parameter...
        sqlCommand.Parameters.Add("@PasswordFormat", SqlDbType.Int, 3).Value = passwordFormat;             // Input Parameter...
        sqlCommand.Parameters.Add("@UserId", SqlDbType.UniqueIdentifier, 15).Value = guid;                 // Output Parameter...
        try
        {
        sqlConnection.Open();
        sqlCommand.ExecuteNonQuery();
        status = MembershipCreateStatus.Success;
        }
        catch (SqlException ex)
        {
            richTextBox1.Text = ex.ToString();
            status = MembershipCreateStatus.ProviderError;
        }
        finally
        {
            sqlConnection.Close();
        }
            this.textBox1.Text = status.ToString();
