    [TestFixture]
    public class NumbericExtensionMethodsTests
        : TestBase
    {
        [Test]
        [TestCase(0.0, null, null, null, 2, ExpectedException = typeof(Exception))]
        [TestCase(0.0, "", null, null, 2, ExpectedException = typeof(Exception))]
        [TestCase(0.0, null, "", null, 2, ExpectedException = typeof(Exception))]
        [TestCase(0.0, "", "", null, 2, ExpectedException = typeof(Exception))]
        [TestCase(0.001, "Rand", "Cent", null, 2, ExpectedException = typeof(Exception))]
        [TestCase(0.001, "Rand", "Cent", null, 3, Result = "Zero Rand and One Cent")]
        [TestCase(0, "Rand", "Cent", null, 2, Result = "Zero Rand")]
        [TestCase(0.0, "Rand", "Cent", null, 2, Result = "Zero Rand")]
        [TestCase(0.01, "Rand", "Cent", null, 2, Result = "Zero Rand and One Cent")]
        [TestCase(0.1, "Rand", "Cent", null, 2, Result = "Zero Rand and Ten Cent")]
        [TestCase(0.10, "Rand", "Cent", null, 2, Result = "Zero Rand and Ten Cent")]
        [TestCase(0.10, "Rand", "Cent", "only", 2, Result = "Zero Rand and Ten Cent only")]
        [TestCase(1.10, "Rand", "Cent", "only", 2, Result = "One Rand and Ten Cent only")]
        [TestCase(1.0, "Rand", "Cent", "only", 2, Result = "One Rand only")]
        [TestCase(123312.32, "Rand", "Cent", null, 2, Result = "One Hundred and Twenty-Three Thousand Three Hundred and Twelve Rand and Thirty-Two Cent")]
        public string NumberToCurrency(decimal number, string major, string minor, string endStr, int minorLength)
        {
            return number.toCurrency(major, minor, endStr, minorLength);
        }
        
        [Test]
        [TestCase(0, Result = "Zero")]
        [TestCase(1, Result = "One")]
        [TestCase(2, Result = "Two")]
        [TestCase(3, Result = "Three")]
        [TestCase(4, Result = "Four")]
        [TestCase(5, Result = "Five")]
        [TestCase(6, Result = "Six")]
        [TestCase(7, Result = "Seven")]
        [TestCase(8, Result = "Eight")]
        [TestCase(9, Result = "Nine")]
        [TestCase(10, Result = "Ten")]
        [TestCase(11, Result = "Eleven")]
        [TestCase(12, Result = "Twelve")]
        [TestCase(13, Result = "Thirteen")]
        [TestCase(14, Result = "Fourteen")]
        [TestCase(15, Result = "Fifteen")]
        [TestCase(16, Result = "Sixteen")]
        [TestCase(17, Result = "Seventeen")]
        [TestCase(18, Result = "Eighteen")]
        [TestCase(19, Result = "Nineteen")]
        [TestCase(20, Result = "Twenty")]
        [TestCase(30, Result = "Thirty")]
        [TestCase(40, Result = "Forty")]
        [TestCase(50, Result = "Fifty")]
        [TestCase(60, Result = "Sixty")]
        [TestCase(70, Result = "Seventy")]
        [TestCase(80, Result = "Eighty")]
        [TestCase(90, Result = "Ninety")]
        [TestCase(99, Result = "Ninety-Nine")]
        [TestCase(100, Result = "One Hundred")]
        [TestCase(101, Result = "One Hundred and One")]
        [TestCase(111, Result = "One Hundred and Eleven")]
        [TestCase(121, Result = "One Hundred and Twenty-One")]
        [TestCase(1000, Result = "One Thousand")]
        [TestCase(1001, Result = "One Thousand and One")]
        [TestCase(1011, Result = "One Thousand and Eleven")]
        [TestCase(1021, Result = "One Thousand and Twenty-One")]
        [TestCase(1100, Result = "One Thousand One Hundred")]
        [TestCase(1101, Result = "One Thousand One Hundred and One")]
        [TestCase(1111, Result = "One Thousand One Hundred and Eleven")]
        [TestCase(1121, Result = "One Thousand One Hundred and Twenty-One")]
        [TestCase(12000, Result = "Twelve Thousand")]
        [TestCase(12001, Result = "Twelve Thousand and One")]
        [TestCase(12011, Result = "Twelve Thousand and Eleven")]
        [TestCase(12021, Result = "Twelve Thousand and Twenty-One")]
        [TestCase(12100, Result = "Twelve Thousand One Hundred")]
        [TestCase(12101, Result = "Twelve Thousand One Hundred and One")]
        [TestCase(12111, Result = "Twelve Thousand One Hundred and Eleven")]
        [TestCase(12121, Result = "Twelve Thousand One Hundred and Twenty-One")]
        [TestCase(60000, Result = "Sixty Thousand")]
        [TestCase(60001, Result = "Sixty Thousand and One")]
        [TestCase(60011, Result = "Sixty Thousand and Eleven")]
        [TestCase(60021, Result = "Sixty Thousand and Twenty-One")]
        [TestCase(60100, Result = "Sixty Thousand One Hundred")]
        [TestCase(60101, Result = "Sixty Thousand One Hundred and One")]
        [TestCase(60111, Result = "Sixty Thousand One Hundred and Eleven")]
        [TestCase(60121, Result = "Sixty Thousand One Hundred and Twenty-One")]
        [TestCase(61000, Result = "Sixty-One Thousand")]
        [TestCase(61001, Result = "Sixty-One Thousand and One")]
        [TestCase(61011, Result = "Sixty-One Thousand and Eleven")]
        [TestCase(61021, Result = "Sixty-One Thousand and Twenty-One")]
        [TestCase(61100, Result = "Sixty-One Thousand One Hundred")]
        [TestCase(61101, Result = "Sixty-One Thousand One Hundred and One")]
        [TestCase(61111, Result = "Sixty-One Thousand One Hundred and Eleven")]
        [TestCase(61121, Result = "Sixty-One Thousand One Hundred and Twenty-One")]
        
        [TestCase(100000, Result = "One Hundred Thousand")]
        [TestCase(100001, Result = "One Hundred Thousand and One")]
        [TestCase(100011, Result = "One Hundred Thousand and Eleven")]
        [TestCase(100021, Result = "One Hundred Thousand and Twenty-One")]
        [TestCase(100100, Result = "One Hundred Thousand One Hundred")]
        [TestCase(100101, Result = "One Hundred Thousand One Hundred and One")]
        [TestCase(100111, Result = "One Hundred Thousand One Hundred and Eleven")]
        [TestCase(100121, Result = "One Hundred Thousand One Hundred and Twenty-One")]
        [TestCase(101000, Result = "One Hundred and One Thousand")]
        [TestCase(101001, Result = "One Hundred and One Thousand and One")]
        [TestCase(101011, Result = "One Hundred and One Thousand and Eleven")]
        [TestCase(101021, Result = "One Hundred and One Thousand and Twenty-One")]
        [TestCase(101100, Result = "One Hundred and One Thousand One Hundred")]
        [TestCase(101101, Result = "One Hundred and One Thousand One Hundred and One")]
        [TestCase(101111, Result = "One Hundred and One Thousand One Hundred and Eleven")]
        [TestCase(101121, Result = "One Hundred and One Thousand One Hundred and Twenty-One")]
        [TestCase(112000, Result = "One Hundred and Twelve Thousand")]
        [TestCase(112001, Result = "One Hundred and Twelve Thousand and One")]
        [TestCase(112011, Result = "One Hundred and Twelve Thousand and Eleven")]
        [TestCase(112021, Result = "One Hundred and Twelve Thousand and Twenty-One")]
        [TestCase(112100, Result = "One Hundred and Twelve Thousand One Hundred")]
        [TestCase(112101, Result = "One Hundred and Twelve Thousand One Hundred and One")]
        [TestCase(112111, Result = "One Hundred and Twelve Thousand One Hundred and Eleven")]
        [TestCase(112121, Result = "One Hundred and Twelve Thousand One Hundred and Twenty-One")]
        [TestCase(160000, Result = "One Hundred and Sixty Thousand")]
        [TestCase(160001, Result = "One Hundred and Sixty Thousand and One")]
        [TestCase(160011, Result = "One Hundred and Sixty Thousand and Eleven")]
        [TestCase(160021, Result = "One Hundred and Sixty Thousand and Twenty-One")]
        [TestCase(160100, Result = "One Hundred and Sixty Thousand One Hundred")]
        [TestCase(160101, Result = "One Hundred and Sixty Thousand One Hundred and One")]
        [TestCase(160111, Result = "One Hundred and Sixty Thousand One Hundred and Eleven")]
        [TestCase(160121, Result = "One Hundred and Sixty Thousand One Hundred and Twenty-One")]
        [TestCase(161000, Result = "One Hundred and Sixty-One Thousand")]
        [TestCase(161001, Result = "One Hundred and Sixty-One Thousand and One")]
        [TestCase(161011, Result = "One Hundred and Sixty-One Thousand and Eleven")]
        [TestCase(161021, Result = "One Hundred and Sixty-One Thousand and Twenty-One")]
        [TestCase(161100, Result = "One Hundred and Sixty-One Thousand One Hundred")]
        [TestCase(161101, Result = "One Hundred and Sixty-One Thousand One Hundred and One")]
        [TestCase(161111, Result = "One Hundred and Sixty-One Thousand One Hundred and Eleven")]
        [TestCase(161121, Result = "One Hundred and Sixty-One Thousand One Hundred and Twenty-One")]
        [TestCase(1000000, Result = "One Million")]
        [TestCase(Int32.MaxValue, Result = "Two Thousand One Hundred and Forty-Seven Million Four Hundred and Eighty-Three Thousand Six Hundred and Forty-Seven")]
        /*Assuming Millions will work if Thousands worked*/
        public string IntToWords(int number)
        {
            return number.toWords().Trim();
        }
    }
