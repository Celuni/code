    // Generated by .NET Reflector from C:\dev\c1\Source\WindowsAzure\packages\Unity.AspNet.WebApi.3.0.1304.0\lib\Net45\Microsoft.Practices.Unity.WebApi.dll
    namespace Microsoft.Practices.Unity.WebApi
    {
        using Microsoft.Practices.Unity;
        using System;
        using System.Collections.Generic;
        using System.Web.Http.Dependencies;
    
        public sealed class UnityDependencyResolver : IDependencyResolver, IDependencyScope, IDisposable
        {
            private IUnityContainer container;
            private SharedDependencyScope sharedScope;
    
            public UnityDependencyResolver(IUnityContainer container)
            {
                if (container == null)
                {
                    throw new ArgumentNullException("container");
                }
                this.container = container;
                this.sharedScope = new SharedDependencyScope(container);
            }
    
            public IDependencyScope BeginScope()
            {
                return this.sharedScope;
            }
    
            public void Dispose()
            {
                this.container.Dispose();
                this.sharedScope.Dispose();
            }
    
            public object GetService(Type serviceType)
            {
                try
                {
                    return this.container.Resolve(serviceType, new ResolverOverride[0]);
                }
                catch (ResolutionFailedException)
                {
                    return null;
                }
            }
    
            public IEnumerable<object> GetServices(Type serviceType)
            {
                try
                {
                    return this.container.ResolveAll(serviceType, new ResolverOverride[0]);
                }
                catch (ResolutionFailedException)
                {
                    return null;
                }
            }
    
            private sealed class SharedDependencyScope : IDependencyScope, IDisposable
            {
                private IUnityContainer container;
    
                public SharedDependencyScope(IUnityContainer container)
                {
                    this.container = container;
                }
    
                public void Dispose()
                {
                }
    
                public object GetService(Type serviceType)
                {
                    return this.container.Resolve(serviceType, new ResolverOverride[0]);
                }
    
                public IEnumerable<object> GetServices(Type serviceType)
                {
                    return this.container.ResolveAll(serviceType, new ResolverOverride[0]);
                }
            }
        }
    }
