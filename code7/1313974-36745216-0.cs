        public async Task<ActionResult> ServerAuth()
        {
            ViewBag.Message = "Server to server authentication";
            List<string> records = new List<string>();
            const string ServiceAccountEmail = "your-account@appspot.gserviceaccount.com";
            string fullKeyPath = HttpContext.Server.MapPath("~/Key/MyProjectKey.p12"); // The certificate generated by Google and uploaded in the project.
            var certificate = new X509Certificate2(fullKeyPath, "notasecret", X509KeyStorageFlags.Exportable); // "notasecret" is the password for the certificate
            var serviceAccountCredentialInitializer = new ServiceAccountCredential.Initializer(ServiceAccountEmail)
            {
                Scopes = new[] { "https://spreadsheets.google.com/feeds", "http://spreadsheets.google.com/feeds/spreadsheets/private/full" }  
            }.FromCertificate(certificate);
            var credential = new ServiceAccountCredential(serviceAccountCredentialInitializer);
            if (!await credential.RequestAccessTokenAsync(System.Threading.CancellationToken.None))
            {
                throw new InvalidOperationException("Access token request failed.");
            }
            var requestFactory = new GDataRequestFactory(null);
            requestFactory.CustomHeaders.Add("Authorization: Bearer " + credential.Token.AccessToken);
            var service = new SpreadsheetsService(null) { RequestFactory = requestFactory };
            SpreadsheetQuery query = new SpreadsheetQuery();
            query.Title = "Test Sheet"; // The exact name of the sheet you want to read
            query.Exact = true;
            var feed = service.Query(query);
            foreach (SpreadsheetEntry entry in feed.Entries)
            {
                foreach (WorksheetEntry worksheet in entry.Worksheets.Entries.Cast<WorksheetEntry>())
                {
                    CellQuery cellQuery = new CellQuery(worksheet.CellFeedLink);
                    CellFeed cellFeed = service.Query(cellQuery);
                    foreach (CellEntry cell in cellFeed.Entries)
                    {
                        records.Add(cell.InputValue);
                    }
                }
            }
            return View(records);
        }
