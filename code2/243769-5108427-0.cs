    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.1
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------
    
    // Notice: Use of the service proxies that accompany this notice is subject to
    //            the terms and conditions of the license agreement located at
    //            http://go.microsoft.com/fwlink/?LinkID=202740&clcid=0x409
    //            If you do not agree to these terms you may not use this content.
    namespace WolframAlpha {
        using System;
        using System.Collections.Generic;
        using System.Data.Services.Client;
        using System.Net;
        using System.IO;
        
        
        public partial class DefaultPodEntity {
            
            private String _PlainText;
            
            private String _Img;
            
            private String _Title;
            
            private String _ParentTitle;
            
            private Int16 _ParentPosition;
            
            private String _ParentId;
            
            public String PlainText {
                get {
                    return this._PlainText;
                }
                set {
                    this._PlainText = value;
                }
            }
            
            public String Img {
                get {
                    return this._Img;
                }
                set {
                    this._Img = value;
                }
            }
            
            public String Title {
                get {
                    return this._Title;
                }
                set {
                    this._Title = value;
                }
            }
            
            public String ParentTitle {
                get {
                    return this._ParentTitle;
                }
                set {
                    this._ParentTitle = value;
                }
            }
            
            public Int16 ParentPosition {
                get {
                    return this._ParentPosition;
                }
                set {
                    this._ParentPosition = value;
                }
            }
            
            public String ParentId {
                get {
                    return this._ParentId;
                }
                set {
                    this._ParentId = value;
                }
            }
        }
        
        public partial class HtmlPodEntity {
            
            private String _Markup;
            
            private String _Title;
            
            private Int16 _Position;
            
            private String _Id;
            
            private String _Css;
            
            private String _Scripts;
            
            public String Markup {
                get {
                    return this._Markup;
                }
                set {
                    this._Markup = value;
                }
            }
            
            public String Title {
                get {
                    return this._Title;
                }
                set {
                    this._Title = value;
                }
            }
            
            public Int16 Position {
                get {
                    return this._Position;
                }
                set {
                    this._Position = value;
                }
            }
            
            public String Id {
                get {
                    return this._Id;
                }
                set {
                    this._Id = value;
                }
            }
            
            public String Css {
                get {
                    return this._Css;
                }
                set {
                    this._Css = value;
                }
            }
            
            public String Scripts {
                get {
                    return this._Scripts;
                }
                set {
                    this._Scripts = value;
                }
            }
        }
        
        public partial class PlainTextPodEntity {
            
            private String _PlainText;
            
            private String _Title;
            
            private String _ParentTitle;
            
            private Int16 _ParentPosition;
            
            private String _ParentId;
            
            public String PlainText {
                get {
                    return this._PlainText;
                }
                set {
                    this._PlainText = value;
                }
            }
            
            public String Title {
                get {
                    return this._Title;
                }
                set {
                    this._Title = value;
                }
            }
            
            public String ParentTitle {
                get {
                    return this._ParentTitle;
                }
                set {
                    this._ParentTitle = value;
                }
            }
            
            public Int16 ParentPosition {
                get {
                    return this._ParentPosition;
                }
                set {
                    this._ParentPosition = value;
                }
            }
            
            public String ParentId {
                get {
                    return this._ParentId;
                }
                set {
                    this._ParentId = value;
                }
            }
        }
        
        public partial class WolframAlphaFactsContainer : System.Data.Services.Client.DataServiceContext {
            
            public WolframAlphaFactsContainer(Uri serviceRoot) : 
                    base(serviceRoot) {
            }
            
            /// <summary>
            /// </summary>
            /// <param name="Input">Query string Sample Values : weather|msft|derivative of x^4 sin x|SAT scores</param>
            /// <param name="Location">Location used for computation Sample Values : Madrid|Springfield, IL</param>
            /// <param name="LatitudeLongitude">Latitude/Longitude used for computation Sample Values : 40.42,-3.71|-22.54,-43.12</param>
            /// <param name="Width">Width in pixels for images returned Sample Values : 300|500</param>
            public DataServiceQuery<DefaultPodEntity> GetImageResults(String Input, String Location, String LatitudeLongitude, Int16? Width) {
                if ((Input == null)) {
                    throw new System.ArgumentNullException("Input", "Input value cannot be null");
                }
                DataServiceQuery<DefaultPodEntity> query;
                query = base.CreateQuery<DefaultPodEntity>("GetImageResults");
                if ((Input != null)) {
                    query = query.AddQueryOption("Input", string.Concat("\'", Input, "\'"));
                }
                if ((Location != null)) {
                    query = query.AddQueryOption("Location", string.Concat("\'", Location, "\'"));
                }
                if ((LatitudeLongitude != null)) {
                    query = query.AddQueryOption("LatitudeLongitude", string.Concat("\'", LatitudeLongitude, "\'"));
                }
                if (((Width != null) 
                            && (Width.HasValue == true))) {
                    query = query.AddQueryOption("Width", Width.Value);
                }
                return query;
            }
            
            /// <summary>
            /// </summary>
            /// <param name="Input">Query string Sample Values : weather|msft|derivative of x^4 sin x|SAT scores</param>
            /// <param name="Location">Location used for computation Sample Values : Madrid|Springfield, IL</param>
            /// <param name="LatitudeLongitude">Latitude/Longitude used for computation Sample Values : 40.42,-3.71|-22.54,-43.12</param>
            /// <param name="Width">Width in pixels for images returned Sample Values : 300|500</param>
            public DataServiceQuery<HtmlPodEntity> GetHtmlResults(String Input, String Location, String LatitudeLongitude, Int16? Width) {
                if ((Input == null)) {
                    throw new System.ArgumentNullException("Input", "Input value cannot be null");
                }
                DataServiceQuery<HtmlPodEntity> query;
                query = base.CreateQuery<HtmlPodEntity>("GetHtmlResults");
                if ((Input != null)) {
                    query = query.AddQueryOption("Input", string.Concat("\'", Input, "\'"));
                }
                if ((Location != null)) {
                    query = query.AddQueryOption("Location", string.Concat("\'", Location, "\'"));
                }
                if ((LatitudeLongitude != null)) {
                    query = query.AddQueryOption("LatitudeLongitude", string.Concat("\'", LatitudeLongitude, "\'"));
                }
                if (((Width != null) 
                            && (Width.HasValue == true))) {
                    query = query.AddQueryOption("Width", Width.Value);
                }
                return query;
            }
            
            /// <summary>
            /// </summary>
            /// <param name="Input">Query string Sample Values : weather|msft|derivative of x^4 sin x|SAT scores</param>
            /// <param name="Location">Location used for computation Sample Values : Madrid|Springfield, IL</param>
            /// <param name="LatitudeLongitude">Latitude/Longitude used for computation Sample Values : 40.42,-3.71|-22.54,-43.12</param>
            /// <param name="Width">Width in pixels for images returned Sample Values : 300|500</param>
            public DataServiceQuery<PlainTextPodEntity> GetPlainTextResults(String Input, String Location, String LatitudeLongitude, Int16? Width) {
                if ((Input == null)) {
                    throw new System.ArgumentNullException("Input", "Input value cannot be null");
                }
                DataServiceQuery<PlainTextPodEntity> query;
                query = base.CreateQuery<PlainTextPodEntity>("GetPlainTextResults");
                if ((Input != null)) {
                    query = query.AddQueryOption("Input", string.Concat("\'", Input, "\'"));
                }
                if ((Location != null)) {
                    query = query.AddQueryOption("Location", string.Concat("\'", Location, "\'"));
                }
                if ((LatitudeLongitude != null)) {
                    query = query.AddQueryOption("LatitudeLongitude", string.Concat("\'", LatitudeLongitude, "\'"));
                }
                if (((Width != null) 
                            && (Width.HasValue == true))) {
                    query = query.AddQueryOption("Width", Width.Value);
                }
                return query;
            }
        }
    }
