	public class PriceTable
	{
		public int ID { get; set; }
		public HashSet<Price> Prices { get; set; }
		// New field, which allows me to query "all the Products in some PriceTable"
		public IEnumerable<Product> Products
			{
				get
				{
					return Prices.Select(p => p.Product);
				}
			}
			
		public PriceTable()
		{
			Prices = new HashSet<Price>();
		}
	}
	public class Price
	{
		public int ID { get; set; }        
		public double Value { get; set; }
		public int ProductID { get; set; }
		public virtual Product Product { get; set; }
		public int PriceTableID { get; set; }
		public virtual PriceTable PriceTable { get; set; }
	}
	public class Product
	{
		public int ID { get; set; }
		public String Name { get; set; }
		// New field, previsouly automatically generated by EF4
		public HashSet<Price> Prices { get; set; } 
		
		// New field, which allows me to query "all the PriceTables on which a Product appears"
		public IEnumerable<PriceTable> PriceTables 
			{
				get 
				{ 
					return Prices.Select(p => p.PriceTables); 
				} 
			}
	}
