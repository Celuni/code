    /// <summary>
    /// Rewrite any block marked as BlockedByFinally as an "infinite loop".
    /// </summary>
    /// <remarks>
    /// Matches the code generated by the native compiler in
    /// ILGENREC::AdjustBlockedLeaveTargets.
    /// </remarks>
    private void RewriteSpecialBlocks()
    {
        var current = leaderBlock;
        while (current != null)
        {
            // The only blocks that should be marked as BlockedByFinally
            // are the special blocks inserted at the end of exception handlers.
            Debug.Assert(current.Reachability != Reachability.BlockedByFinally ||
                IsSpecialEndHandlerBlock(current));
             if (IsSpecialEndHandlerBlock(current))
            {
                if (current.Reachability == Reachability.BlockedByFinally)
                {
                    // BranchLabel points to the same block, so the BranchCode
                    // is changed from Nop to Br_s.
                    current.SetBranchCode(ILOpCode.Br_s);
                }
                else
                {
                    // special block becomes a true nop
                    current.SetBranch(null, ILOpCode.Nop);
                }
            }
            current = current.NextBlock;
        }
        // Now that the branch code has changed, the block is no longer special.
        Debug.Assert(AllBlocks(block => !IsSpecialEndHandlerBlock(block)));
    }
