    //Model possibly generated by LinqToSQL, Entity Framework or simalar, in which case most of this will be done for you automatically
    public class Person
    {
        public string FirstName{get;set}
        public string SurnameName{get;set}
        public DateTime DateOfBirth{get;set}
        public static Person Load()
        {
            //get person from DB
        }
        public void Save()
        {
            //copy record to DB
        }
    }
    //Read only ViewModel converts model into the required format INotifyPropertyChanged used to inform View about changes to class as notified by the model
    public class PersonShort:INotifyPropertyChanged
    {
        private Person model;
        public string Name{get;} => model.FirstName + " " + model.FirstName;
        public int Age => (DateTime.Today - model.DateOfBirth);
        public void Save()
        {
            //copy record to DB
        }
    }
    //Editable ViewModel converts model into the required format and allows editing with INotifyPropertyChanged used to inform View about changes to class as notified by the model or as a result from changes in the view, note that because the Person is held separately in the VM undoing is possible
    public class PersonEdit:INotifyPropertyChanged
    {
        private Person model;
        public string FirstName{get;set}
        public string SurnameName{get;set}
        public DateTime DateOfBirth{get;set}
        public string ValidationMessage{get;set}
        public void Save()
        {
           if(validatedata)
           {
               model.FirstName = Firstname;
               model.Surname = Surname;
               model.DateOfBirth= DateOfBirth;
               model.Save();
           }
        }
        public void Cancel()
        {
               FirstName = model.Firstname;
               Surname = model.Surname;
               DateOfBirth= model.DateOfBirth;
        }
    }
