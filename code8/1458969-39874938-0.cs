    public class HtmlContent : ITextContentItem, ICreateStamp, IEditStamp, IImmutable
    {
        // ReSharper disable once UnusedMember.Local
        private HtmlContent()
        {
    
        }
		
		public HtmlContent(string name, string description, string text, DateTime creationDate,
            DateTime? lastEditDate, ApplicationUser createdBy, ApplicationUser lastEditedBy)
        {
            this.Name = name;
            this.Description = description;
            this.Text = text;
            this.CreationDate = creationDate;
            this.LastEditDate = lastEditDate;
            this.CreatedBy = createdBy;
            this.LastEditedBy = lastEditedBy;
			this.LastEditedById = LastEditedBy?.Id; // Set the id if it isn't null
        }
        
        public HtmlContent(int id, string name, string description, string text, DateTime creationDate,
            DateTime? lastEditDate, ApplicationUser createdBy, ApplicationUser lastEditedBy)
            : this(name, description, text, creationDate, lastEditDate, createdBy, lastEditedBy)
        {
            this.Id = id;
        }
        
        public int Id { get; private set; }
        
        public string Name { get; private set; }
        
        public string Description { get; private set; }
        
        public string Text { get; private set; }
        
        public DateTime CreationDate { get; private set; }
        
        public DateTime? LastEditDate { get; private set; }
        
        public ApplicationUser CreatedBy { get; private set; }
        
		[ForeignKey("LastEditedById")] // Set the foreign key to existing property
        public ApplicationUser LastEditedBy { get; private set; }
		
        // Use a property in the model for saving and not just a property generated by code first in the database
		public string LastEditedById { get; private set; }
        
        internal HtmlContent SetLastEditInfo(DateTime? lastEditDate, ApplicationUser lastEditedBy)
        {
            if ((lastEditDate.HasValue && lastEditedBy == null) || 
                (!lastEditDate.HasValue && lastEditedBy != null))
            {
                throw new InvalidOperationException($"{nameof(lastEditDate)} and {nameof(lastEditedBy)} must be used together");
            }
        
            return new HtmlContent(this.Id, this.Name, this.Description, this.Text, this.CreationDate, lastEditDate, this.CreatedBy, lastEditedBy);
        }
        
        internal HtmlContent UpdateHtmlContent(string name, string description, string text)
        {
            return new HtmlContent(this.Id, name, description, text, this.CreationDate, this.LastEditDate, this.CreatedBy, this.LastEditedBy);
        }
    }
