    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Net.Http;
    using System.Net.Http.Headers;
    using System.Text;
    using System.Threading.Tasks;
    namespace ConsoleApplication1
    {
      class Program
      {
          static void Main(string[] args)
          {
            HttpClient client = new HttpClient();
                        
            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
            HttpResponseMessage response = client.GetAsync("https://ebanking.bankofmaldives.com.mv/xe/").Result;
            
            
            if (response.IsSuccessStatusCode)
            {
                string JSON = response.Content.ReadAsStringAsync().Result;
                //Deserialize to strongly typed class i.e., RootObject
                RootObject obj = JsonConvert.DeserializeObject<RootObject>(JSON);
                //Suppose your connection string is with the name XYZEntities in web.config, and your database contains the table with proper structure required. Supposing table name as XYZ, then what you need to do is:
                //loop through the list and insert into database
                using(var db = new XYZEntities){
                foreach (CurrencyList currencyItem in obj.CurrencyList)
                {
                      db.XYZ.Add(new XYZ(){
                      key = currencyItem.Key,
                      code = currencyItem.Value.Code, 
                      description = currencyItem.Value.Description,
                      buy = currencyItem.Value.Buy,
                      sell = currencyItem.Value.Sell
                      });                  
                }
                try{
                     db.SaveChanges();
                   }catch(Exception e){
                    //do something to handle exception here.
                   }
              }
            }
        }
        **Note: Below classes are generated by utilising http://json2csharp.com/**
        **ofcourse these can be hand coded by looking at the Json response from the service**
        public class Value
        {
            public string Code { get; set; }
            public string Description { get; set; }
            public double Buy { get; set; }
            public double Sell { get; set; }
        }
        public class CurrencyList
        {
            public string Key { get; set; }
            public Value Value { get; set; }
        }
        public class RootObject
        {
            public List<CurrencyList> CurrencyList { get; set; }
        }
        
      }
    } 
