    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool. 
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
        //------------------------------------------------------------------------------
    // Generated from: inputs.proto
    namespace inputs
    {
    [global::System.Serializable,  global::ProtoBuf.ProtoContract(Name=@"InputState")]
     public partial class InputState : global::ProtoBuf.IExtensible
    {
    public InputState() {}
    
    private uint _input;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"input", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint input
    {
      get { return _input; }
      set { _input = value; }
    }
    private string _state;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"state", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string state
    {
      get { return _state; }
      set { _state = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
    }
  
     [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"InputStateData")]
     public partial class InputStateData : global::ProtoBuf.IExtensible
    {
    public InputStateData() {}
    
    private readonly global::System.Collections.Generic.List<InputState> _input = new global::System.Collections.Generic.List<InputState>();
    [global::ProtoBuf.ProtoMember(1, Name=@"input", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<InputState> input
    {
      get { return _input; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
    }
  
    }
